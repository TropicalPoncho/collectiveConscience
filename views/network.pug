extends layout
block css
  link(rel='stylesheet', type="text/css", href='/stylesheets/network.css')
block js
  script(src="//unpkg.com/3d-force-graph")
  script(src="//unpkg.com/three")
  script(src="//unpkg.com/three-spritetext")
  script(src="//unpkg.com/three/examples/js/postprocessing/Pass.js")
  script(src="//unpkg.com/three/examples/js/shaders/CopyShader.js")
  script(src="//unpkg.com/three/examples/js/shaders/LuminosityHighPassShader.js")
  script(src="//unpkg.com/three/examples/js/postprocessing/UnrealBloomPass.js")
  script(src="/javascripts/threex.keyboardstate.js")
  script(type="importmap").
    {
      "imports": {
        "three": "//unpkg.com/three@0.144.0/build/three.module.js",
        "three/addons/": "//unpkg.com/three@0.144.0/examples/jsm/",
        "three/nodes": "//unpkg.com/three@0.144.0/examples/jsm/nodes/Nodes.js"
      }
    }
  script(type="x-shader/x-vertex", id="vertexshader").
    uniform float amplitude;

    attribute vec3 displacement;
    attribute vec3 customColor;

    varying vec3 vColor;

    void main() {

      vec3 newPosition = position + amplitude * displacement;

      vColor = customColor;

      gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );

    }
  script(type="x-shader/x-fragment", id="fragmentshader").
    uniform vec3 color;
    uniform float opacity;

    varying vec3 vColor;

    void main() {
      gl_FragColor = vec4( vColor * color, opacity );
    }
  //script(type="module", src="/javascripts/glBlob/Blob.js")
  script(type="module", src="/javascripts/js.cookie.min.mjs")
  script(type="module", src="/javascripts/network.js")
  script(type="module", src="/javascripts/titleObject.js")
  if neurons
    script var neurons = !{JSON.stringify(neurons)};
  if fromId
    script var fromId = !{JSON.stringify(fromId)};
block content
  #neuralNetwork
  #navScene(class='navbar-fixed')
  .neuronInfoContainer.floatingInfo
  #flyerInfo.floatingInfo
    #introNetwork
      h5 Experiencia artística Inmersiva
      p. 
        Soma Beta es un festival de arte multidisciplinario producido por Tropical Poncho. 
        Esta edición que se realiza por primera vez en BsAs funcionará como una presentación de lo que ya se hizo y del eje curatorial del festival que tendrá lugar en enero de 2023 en la Patagonia.
      h6 LINE UP
      ul
        li ONLY VINYLS DJ SET
        li LIVE SETS
        li DANZA AEREA
        li ENTRENAMIENTO PERFORMATICO
        li POESÍA PERFORMÁTICA
        li PINTURA EN VIVO
        li EXPOSICIONES
    a(class="btn" id="btn_explainNetwork") ¿Qué estoy viendo?
    #explainNetwork.hidden
      p. 
        Esta es una obra de arte generativo, dinámica e interactiva, que además de servir como difusión del evento SOMA BETA, 
        responde a la interacción de quienes acceden a ella como primer acercamiento del eje curatorial del mismo.
      p(style="font-size:16;").
        Los nodos representan personas u organizaciones y las lineas responden a las conexiones entre sí.  
        Cada persona que accede a la visualización de la obra, es representada automaticamente como un nuevo nodo y
        un nuevo vinculo que se extiende hacia aquel que sirvió como punto de acceso. 
      p. 
        Este gráfico pretende introducir el eje curatorial de SOMA BETA: existe un patrón que se repite 
        a nivel físico, natural y social: Desde la red neuronal que conforma 
        nuestra consciencia, la cual es el soporte de esta gran obra de arte inmersiva y al mismo tiempo 
        la inmensa red de productoras, espacios, colaboradores y artístas que se conectan para hacer posible su realización.
      p(style="font-weight: bold;"). 
        Podés explorar la red, clickeando en aquellas neuronas que tienen nombre para conocer más de los artistas, 
        del espacio o de las productoras involucradas.
    #entranceDiv
      a(type='button' class='waves-effect waves-light btn' href='passline.com/somabeta') Comprar Entrada Anticipada
    #shareDiv(class='row')
      p Para que la obra crezca, es importante compartir por este medio:
      a(type='button' class='waves-effect waves-light btn s3' id="share_story" href='') Compartir Historia
      span(class='s1')
      a(type='button' class='waves-effect waves-light btn s3' id="share_wpp" href='') Compartir por WhatsApp